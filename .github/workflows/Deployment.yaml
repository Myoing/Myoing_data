name: Myoing Data API Deployment

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  # CI: 코드 검증 및 Docker 이미지 빌드
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        # 최신 코드를 가져오기
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      
      - name: Lint with flake8
        run: |
          # Python 코드 품질 검사
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Build and push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          dockerfile: Dockerfile
          image: hyunbinkim00/myoing_data_api
          tags: latest
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
#   # CD: 원격 서버에 Docker 컨테이너 배포
#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#     steps:
#       - name: Deploy to server
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.SERVER_HOST }}
#           username: ${{ secrets.SERVER_USERNAME }}
#           key: ${{ secrets.SERVER_SSH_KEY }}
#           script: |
#             # 이전 컨테이너 정리
#             docker pull hyunbinkim00/myoing_data_api:latest
#             docker stop myoing_data_api || true
#             docker rm myoing_data_api || true
            
#             # 새 컨테이너 실행 (볼륨 마운트 포함)
#             docker run -d \
#               --name myoing_data_api \
#               -p 8000:8000 \
#               -v /path/on/server/data:/app/data \
#               --restart unless-stopped \
#               hyunbinkim00/myoing_data_api:latest
            
#             # 미사용 이미지 정리
#             docker system prune -af --volumes